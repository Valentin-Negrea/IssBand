package com.example.issband.Controller;

import com.example.issband.Domain.User;
import com.example.issband.Repository.SQLUserRepository;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.stage.Stage;

import java.io.IOException;

public class UserWindowController {

    @FXML
    private TextField textFieldName;

    @FXML
    private PasswordField textFieldPassword;

    @FXML
    private Button SignUpButton;

    @FXML
    private Button LogInButton;

    private SQLUserRepository userRepository;

    public UserWindowController() {
        userRepository = new SQLUserRepository("iss.db");
    }

    @FXML
    public void handleSignUpButton(ActionEvent actionEvent) {
        String name = textFieldName.getText();
        String password = textFieldPassword.getText();

        if (name.isEmpty() || password.isEmpty()) {
            showAlert(Alert.AlertType.ERROR, "Form Error!", "Please enter name and password");
            return;
        }

        if (!userRepository.isUsernameUnique(name)) {
            showAlert(Alert.AlertType.ERROR, "Form Error!", "Username already exists. Please choose another one.");
            textFieldName.clear();
            textFieldPassword.clear();
            return;
        }


        // ID is generated by the repository
        User newUser = new User(0, name, password);
        userRepository.add(newUser);

        showAlert(Alert.AlertType.INFORMATION, "Registration Successful!", "Welcome " + name);
        textFieldName.clear();
        textFieldPassword.clear();
    }

    @FXML
    public void handleLogInButton(ActionEvent actionEvent) {
        String name = textFieldName.getText();
        String password = textFieldPassword.getText();

        if (name.isEmpty() || password.isEmpty()) {
            showAlert(Alert.AlertType.ERROR, "Form Error!", "Please enter name and password");
            return;
        }

        User user = userRepository.getAll().stream()
                .filter(u -> u.getName().equals(name) && u.getPassword().equals(password))
                .findFirst()
                .orElse(null);

        if (user != null) {
            showAlert(Alert.AlertType.INFORMATION, "Login Successful!", "Welcome back " + name);
            loadListEventsScene();
        } else {
            showAlert(Alert.AlertType.ERROR, "Login Failed!", "Incorrect name or password");
        }
    }

    private void loadListEventsScene() {
        try {
            FXMLLoader loader = new FXMLLoader(getClass().getResource("/com/example/issband/ListEvents.fxml"));
            Parent root = loader.load();
            Scene scene = new Scene(root);
            Stage stage = (Stage) LogInButton.getScene().getWindow();
            stage.setScene(scene);
            stage.show();
        } catch (IOException e) {
            showAlert(Alert.AlertType.ERROR, "Error", "Failed to load the ListEvents scene.");
        }
    }

    private void showAlert(Alert.AlertType alertType, String title, String message) {
        Alert alert = new Alert(alertType);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }
}
